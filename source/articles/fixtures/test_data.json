[
    {
        "pk": 3, 
        "model": "articles.article", 
        "fields": {
            "body": "<p>If you have previously worked with Django templates, you should find Jinja2 very familiar. In fact, most of the syntax elements look and work the same.</p><p>However, Jinja2 provides some more syntax elements covered in the documentation and some work a bit different.</p><p>This section covers the template changes. As the API is fundamentally different we won\u2019t cover it here.</p>", 
            "organizations": [
                1
            ], 
            "subhead": "An article subhead appears just below the headline", 
            "pubdate": "2012-06-23T22:00:28", 
            "title": "This is a test article with some article blocks", 
            "created": "2012-06-02T22:02:57.316", 
            "people": [
                2
            ], 
            "modified": "2012-06-22T22:36:54.262", 
            "summary": "The ProPublica News Apps Team explains how they built a 'Tangled Web' of election contribution data", 
            "article_type": "how-to", 
            "is_live": false, 
            "code": [
                1
            ], 
            "authors": [
                1
            ], 
            "slug": "article-has-some-article-blocks"
        }
    }, 
    {
        "pk": 5, 
        "model": "articles.article", 
        "fields": {
            "body": "We assembled a <a href=\"www.tampabay.com/stand-your-ground-law/fatal-cases\">database of stand your ground cases</a> in Florida to encourage people to explore the cases to see how the law was being applied. We did this because no government entity was tracking such cases.", 
            "organizations": [
                5
            ], 
            "subhead": "A database of stand your ground case details", 
            "pubdate": "2012-06-16T15:53:11", 
            "title": "Florida's Stand Your Ground Law", 
            "created": "2012-06-16T16:03:35.411", 
            "people": [
                13, 
                12
            ], 
            "modified": "2012-06-22T21:07:26.766", 
            "summary": "We assembled a <a href=\"www.tampabay.com/stand-your-ground-law/fatal-cases\">database of stand your ground cases</a> in Florida to encourage people to explore the cases to see how the law was being applied. We did this because no government entity was tracking such cases.", 
            "article_type": "project", 
            "is_live": true, 
            "code": [], 
            "authors": [
                13
            ], 
            "slug": "stand-your-ground"
        }
    }, 
    {
        "pk": 4, 
        "model": "articles.article", 
        "fields": {
            "body": "<p>Via <a href=\"http://www.schoolbook.org\">SchoolBook.org</a>:</p><blockquote><p>The New York Times and WNYC have joined forces on a new site dedicated to news, data and conversation about schools in New York City.</p>\r\n<p>SchoolBook is now the main place to find coverage of schools in New York by The Times and WNYC. SchoolBook\u2019s home page will mix those news, feature and multimedia stories with essays by members of the education community, as well as photos, videos, queries, comments and more. We want to, for example, showcase student newspapers and artwork. We also want people to be able to benefit from other people\u2019s experience. So each day\u2019s news feed will be a blend of political coverage and advice.</p></blockquote>", 
            "organizations": [
                3, 
                4
            ], 
            "subhead": "The New York Times and WNYC collaborate on NYC schools data and coverage", 
            "pubdate": "2012-06-16T14:53:21", 
            "title": "SchoolBook", 
            "created": "2012-06-16T15:05:55.249", 
            "people": [
                7, 
                11, 
                10, 
                4, 
                5, 
                9, 
                8, 
                6
            ], 
            "modified": "2012-06-22T22:33:53.921", 
            "summary": "<p>The New York Times and WNYC have joined forces on a new site dedicated to news, data and conversation about schools in New York City.</p><p>SchoolBook is now the main place to find coverage of schools in New York by The Times and WNYC. SchoolBook\u2019s home page will mix those news, feature and multimedia stories with essays by members of the education community, as well as photos, videos, queries, comments and more.</p>", 
            "article_type": "project", 
            "is_live": true, 
            "code": [], 
            "authors": [
                4
            ], 
            "slug": "schoolbook"
        }
    }, 
    {
        "pk": 1, 
        "model": "articles.articleblock", 
        "fields": {
            "body": "<p>In Django method calls work implicitly. With Jinja2 you have to specify that you want to call an object. Thus this Django code:</p><pre class=\"highlight\">{% for page in user.get_created_pages %}<br>    ...<br>{% endfor %}</pre><p>will look like this in Jinja:</p><pre class=\"highlight\">{% for page in user.get_created_pages() %}<br>    ...<br>{% endfor %}</pre><p>This allows you to pass variables to the function which is also used for macros which is not possible in Django.</p>", 
            "title": "Method calls", 
            "created": "2012-06-02T22:02:57.323", 
            "modified": "2012-06-12T20:38:21.774", 
            "slug": "method-calls", 
            "article": 3, 
            "order": 1
        }
    }, 
    {
        "pk": 2, 
        "model": "articles.articleblock", 
        "fields": {
            "body": "<p>In Django you can use the following constructs to check for equality:</p><pre class=\"highlight\">{% ifequal foo \"bar\" %}<br>    ...<br>{% else %}<br>    ...<br>{% endifequal %}</pre><p>In Jinja2 you can use the normal if statement in combination with operators:</p><pre class=\"highlight\">{% if foo == 'bar' %}<br>    ...<br>{% else %}<br>    ...<br>{% endif %}</pre><p>You can also have multiple elif branches in your template:<p><pre class=\"highlight\">{% if something %}<br>    ...<br>{% elif otherthing %}<br>    ...<br>{% elif foothing %}<br>    ...<br>{% else %}<br>    ...<br>{% endif %}</pre></p>", 
            "title": "Conditions", 
            "created": "2012-06-02T22:02:57.324", 
            "modified": "2012-06-12T20:38:21.779", 
            "slug": "conditions", 
            "article": 3, 
            "order": 2
        }
    }, 
    {
        "pk": 3, 
        "model": "articles.articleblock", 
        "fields": {
            "body": "<p>Jinja2 provides more than one argument for filters. Also the syntax for argument passing is different. A template that looks like this in Django:</p><pre class=\"highlight\">{{ items|join:\", \" }}</pre><p>looks like this in Jinja2:<p><pre class=\"highlight\">{{ items|join(', ') }}</pre><p>In fact it\u2019s a bit more verbose but it allows different types of arguments - including variables - and more than one of them.</p>", 
            "title": "Filter arguments", 
            "created": "2012-06-02T22:02:57.324", 
            "modified": "2012-06-12T20:39:10.666", 
            "slug": "filter-arguments", 
            "article": 3, 
            "order": 3
        }
    }
]